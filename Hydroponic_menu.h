/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include <Wire.h>
#include <LiquidCrystalIO.h>
#include <IoAbstractionWire.h>
#include <RuntimeMenuItem.h>
#include "tcMenuLiquidCrystal.h"

void setupMenu();  // forward reference of the menu setup function.
extern const PROGMEM ConnectorLocalInfo applicationInfo;  // contains app name and ID

// Global variables that need exporting

extern LiquidCrystal lcd;
extern LiquidCrystalRenderer renderer;

// Global Menu Item exports

extern ActionMenuItem menuSaveSettings;
extern ActionMenuItem menuReboot;
extern EnumMenuItem menuWifiMode;
extern TextMenuItem menuPassword;
extern TextMenuItem menuSSID;
extern IpAddressMenuItem menuIP;
extern BackMenuItem menuBackWifiSettings;
extern SubMenuItem menuWifiSettings;
extern AnalogMenuItem menuTestTime;
extern AnalogMenuItem menuTestDuration;
extern AnalogMenuItem menuMixDuration;
extern AnalogMenuItem menuEndTime;
extern AnalogMenuItem menuStartTime;
extern AnalogMenuItem menuIntervalMin;
extern AnalogMenuItem menuRunMin;
extern BooleanMenuItem menuAuto;
extern BackMenuItem menuBackRunningTime;
extern SubMenuItem menuRunningTime;
extern TimeFormattedMenuItem menuCurrentTime;
extern BackMenuItem menuBackTime;
extern SubMenuItem menuTime;
extern ActionMenuItem menuOK;
extern TextMenuItem menuCalStatus;
extern EnumMenuItem menuoptCall;
extern BackMenuItem menuBackCalibrate;
extern SubMenuItem menuCalibrate;
extern AnalogMenuItem menuMinimumEC;
extern AnalogMenuItem menuTargetEC;
extern BackMenuItem menuBackEC;
extern SubMenuItem menuEC;
extern ActionMenuItem menuRunDosing;
extern BooleanMenuItem menuAutoDose;
extern AnalogMenuItem menuMlMin;
extern AnalogMenuItem menuMl;
extern BackMenuItem menuBackDosing;
extern SubMenuItem menuDosing;
extern ActionMenuItem menuStopAll;
extern ActionMenuItem menuMixNow;
extern ActionMenuItem menuTestNow;
extern ActionMenuItem menuPumping;
extern BackMenuItem menuBackSettings;
extern SubMenuItem menuSettings;
extern AnalogMenuItem menutemperature;
extern TextMenuItem menuPHEC;
extern TextMenuItem menustatus;

// Provide a wrapper to get hold of the root menu item
inline MenuItem& rootMenuItem() { return menustatus; }

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION RunPump(int id);
void CALLBACK_FUNCTION calecph(int id);
void CALLBACK_FUNCTION onReboot(int id);
void CALLBACK_FUNCTION onSaveSettings(int id);
void CALLBACK_FUNCTION onStopAll(int id);
void CALLBACK_FUNCTION runDose(int id);
void CALLBACK_FUNCTION runMix(int id);
void CALLBACK_FUNCTION runTest(int id);

#endif // MENU_GENERATED_CODE_H
